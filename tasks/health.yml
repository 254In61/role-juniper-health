---
#Identify if pre-health-checks or post-health-checks and name the file accordingly
- name: Set file name if pre-health-checks
  ansible.builtin.set_fact:
    file_name: "{{ pre_checks_output_file }}"
  when: pre_checks
  delegate_to: localhost

- name: Set file name if pre-health-checks
  ansible.builtin.set_fact:
    file_name: "{{ post_checks_output_file }}"
  when: post_checks
  delegate_to: localhost

  
# Read the health-checks commands files and create a list of commands to run
- name: Identify commands list
  ansible.builtin.set_fact:
    command_list: "{{ lookup('file', '{{ health_checks }}').splitlines() }}"
  delegate_to: localhost  

# This task produces a dictionary of results for each command run.
- name: Run command
  junipernetworks.junos.junos_command:
    commands: "{{ item }}"
  register: command_output
  ignore_errors: true
  loop: "{{ command_list }}"

- name: Save command output to dynamically named files
  ansible.builtin.copy:
    content: "{{ item.stdout[0] }}"
    dest: "{{ tmp_root_dir }}/{{ item.item | replace(' ', '_') }}.txt"
  loop: "{{ command_output.results }}"
  ignore_errors: true
  delegate_to: localhost
  # when: stdout != "" # Only save output if command was successful

# Combine the output to a single file
- name: "Write health check outputs to {{ tmp_root_dir }}/{{ file_name }}"
  ansible.builtin.shell: |
    echo "" >> {{ tmp_root_dir }}/{{ file_name }}
    echo "##### command : {{ tmp_root_dir }}/{{ item.item | replace('_', ' ') }}.txt" >> {{ tmp_root_dir }}/{{ file_name }}
    cat  {{ tmp_root_dir }}/{{ item.item | replace(' ', '_') }}.txt >> {{ tmp_root_dir }}/{{ file_name }}
    echo "" >> {{ tmp_root_dir }}/{{ file_name }}
  loop: "{{ command_output.results }}"
  delegate_to: localhost

- name: "Read contents of {{ tmp_root_dir }}/{{ file_name }}"
  ansible.set_fact: set_fact:
    file_contents: "{{ lookup('file', '{{ tmp_root_dir }}/{{ file_name }}') }}"
  delegate_to: localhost

- name: Print file contents
  ansible.builtin.debug:
    msg: "{{ file_contents }}"
  delegate_to: localhost  

# git operations
- name: Import git tasks
  ansible.builtin.import_tasks: git.yml

















